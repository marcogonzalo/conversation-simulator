services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
      - "5678:5678"  # Debug port for debugpy
    environment:
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - AI_PROVIDER=${AI_PROVIDER}
      - AI_MODEL=${AI_MODEL}
      - AI_TEMPERATURE=${AI_TEMPERATURE}
      - AI_MAX_TOKENS=${AI_MAX_TOKENS}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - CLAUDE_MODEL=${CLAUDE_MODEL}
      - AUDIO_SAMPLE_RATE=44100
      - AUDIO_CHANNELS=1
      - AUDIO_LATENCY_TARGET=500
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - /app/__pycache__
    command: python -m debugpy --listen 0.0.0.0:5678 -m uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
    networks:
      - conversation-simulator

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - conversation-simulator
    depends_on:
      - backend

  # Database for development (optional - can use Supabase instead)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - conversation-simulator

networks:
  conversation-simulator:
    driver: bridge

volumes:
  postgres_data:
